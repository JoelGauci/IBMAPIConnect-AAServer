# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# MFA service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: mfa-service
  labels:
    app: mfa-service
spec:
  ports:
  - port: 3000
    name: http
  selector:
    app: mfa-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mfa-service-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mfa-service
        version: v1
    spec:
      containers:
      - name: details
        image: docker.io/jogdocker/mfa-service-v1:2018.1.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
---
##################################################################################################
# Accounts service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: accounts-service
  labels:
    app: accounts-service
spec:
  ports:
  - port: 3300
    name: http
  selector:
    app: accounts-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: accounts-service-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: accounts-service
        version: v1
    spec:
      containers:
      - name: accounts-service
        image: docker.io/jogdocker/accounts-service-v1:2018.1.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3300
---
##################################################################################################
# AAserver service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: aaserver-service
  labels:
    app: aaserver-service
spec:
  ports:
  - port: 3400
    name: http
  selector:
    app: aaserver-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aaserver-service-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: aaserver-service
        version: v1
    spec:
      containers:
      - name: aaserver-service
        image: docker.io/jogdocker/aaserver-service-v1:2018.1.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3400
---
###########################################################################
# Ingress resource (gateway) for aaserver
##########################################################################
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: secure-ingress-aaserver
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
 tls:
    - secretName: istio-ingress-certs # currently ignored
 rules:
  - http:
      paths:
      - path: /loginAccount.*
        backend:
          serviceName: aaserver-service
          servicePort: 3400
      - path: /approveAccount.*
        backend:
          serviceName: aaserver-service
          servicePort: 3400
      - path: /redirectAccount.*
        backend:
          serviceName: aaserver-service
          servicePort: 3400
      - path: /twofactorAccount.*
        backend:
          serviceName: aaserver-service
          servicePort: 3400
      - path: /css.*
        backend:
          serviceName: aaserver-service
          servicePort: 3400
---
###########################################################################
# Ingress resource (gateway) for accounts
##########################################################################
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: secure-ingress-accounts
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
 tls:
    - secretName: istio-ingress-certs # currently ignored
 rules:
  - http:
      paths:
      - path: /api/Accounts.*
        backend:
          serviceName: accounts-service
          servicePort: 3300
---
